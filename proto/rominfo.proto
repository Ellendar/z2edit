syntax = "proto3";
package z2util;

message Address {
    int32 bank = 1;
    int32 address = 2;
}

message MemoryRegion {
    int32 bank = 1;
    int32 address = 2;
    int32 length = 3;
}

message Miscellaneous {
    // Ad-hoc collection of values that don't fit anywhere else

    // Overworld maps don't start at y coordinate zero.
    int32 overworld_y_offset = 1;

    // Table where Link's starting values are stored.
    Address start_values = 2;
    Address start_lives = 3;

    // Table describing overworld encounters.
    Address overworld_encounters = 4;

    // Table describing which y-coordinate divides north vs. south.
    Address overworld_mason_dixon = 5;

    // List of memory regions the allocator should not use.
    repeated MemoryRegion allocator_keepout = 6;

    // Each bank has two pointers to enemy data
    repeated Address enemy_pointer = 7;

    // Each bank has a 1K block of enemy data
    int32 enemy_data_rom = 8;
    int32 enemy_data_ram = 9;

    // Information about the raft spot
    Address raft_id = 10;
    Address raft_table = 11;
}

message Palette {
    string name = 1;
    Address address = 2;
}

enum MapType {
    OUTDOORS = 0;
    TOWN = 1;
    PALACE = 2;
    GREAT_PALACE = 3;
    OVERWORLD = 4;
}

message Map {
    string name = 1;
    MapType type = 2;
    Address address = 3;
    int32 length = 4;    

    // Address of a contiguous set of palettes for this map
    // If the palettes are disjoint, use 'palettes' instead.
    Address palette = 5;
    repeated Address objtable = 6;
    Address chr = 7;

    // address of connector table for overworld maps
    // address of 4-byte connector entry for sideview maps
    Address connector = 8;

    // Pointer to the map address
    Address pointer = 9;
    int32 world = 10;

    // Palace "worlds" control some properties of a palace, but for the
    // purpose of the connector list, this map is in each world in the
    // bitmap
    int64 valid_worlds = 11;
    int32 overworld = 12;
    int32 subworld = 13;
    int32 area = 14;

    // Addresses of palettes for this map.
    repeated Address palettes = 15;
}

message SideViewMapPointers {
    string area = 1;
    Address address = 2;
    int32 length = 3;
    repeated string name = 4;
    Address palette = 5;
    MapType type = 6;
    Address chr = 7;
    Address connector = 8;
    int32 world = 9;
    int64 valid_worlds = 10;
    int32 area_offset = 11;
    int32 overworld = 12;
    int32 subworld = 13;
    repeated Address palettes = 15;
}

message DecompressInfo {
    enum ObjectType {
        OBJECT_SMALL = 0;
        OBJECT_SET_0 = 1;
        OBJECT_SET_1 = 2;
        OBJECT_EXTRA_SMALL = 3;
        OBJECT_EXTRA = 4;
    }
    enum RenderType {
        UNKNOWN = 0;
        // Render an 'item & 15' horizontal stripe of a 'height' tall object
        RENDER_HORIZONTAL = 1;
        // Render an 'item & 15'  vertical stripe of a 'width' wide object
        RENDER_VERTICAL = 2;
        // Render an 'item & 15' tall object with a unique top piece
        RENDER_TOP_UNIQUE = 3;
        // Render an 'item & 15' tall object with a unique bottom piece
        RENDER_BOTTOM_UNIQUE = 4;
        RENDER_CUSTOM = 5;
    }
    

    MapType area = 1;
    ObjectType type = 2;
    int32 id = 3;
    RenderType render = 4;
    int32 width = 5;
    int32 height = 6;
    repeated int32 objid = 7;
    string custom = 8;
    string comment = 9;
    int32 fixed_y = 10;
}

message BackgroundInfo {
    string name = 1;
    repeated int32 ceiling = 2;
    repeated int32 floor = 3;
    int32 alternate = 4;
    int32 background = 5;
    int32 index = 6;
    MapType type = 7;
}

message SpriteInfo {
    string name = 1;
    int32 width = 2;
    int32 height = 3;
    Address chr = 4;
    Address table = 5;
    int32 palette = 6;
    repeated int32 id = 7;
}

message ItemInfo {
    string area = 1;
    int32 world = 2;
    int64 valid_worlds = 3;
    map<int32, SpriteInfo> info = 4;
    Address chr = 5;
    Address sprite_table = 6;
    int32 overworld = 7;
    int32 subworld = 8;
}

message AvailableBitmap {
    int32 world = 1;
    int32 overworld = 2;
    int32 subworld = 3;
    Address address = 4;
}

message HelpLinks {
    map<string, string> url = 1;
}

message RomInfo {
    string path = 1; // For internal use by the config loader
    repeated string load = 2;
    repeated Map map = 3;    
    repeated Palette palette = 4;
    repeated SideViewMapPointers sideview = 5;
    repeated DecompressInfo decompress = 6;
    repeated BackgroundInfo background = 7;
    ItemInfo worlds = 8;
    ItemInfo items = 9;
    repeated ItemInfo areas = 10;
    repeated ItemInfo enemies = 11;
    Miscellaneous misc = 12;
    HelpLinks help = 13;
    repeated AvailableBitmap available = 14;
}
